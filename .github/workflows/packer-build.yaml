name: Build Packer Image

on:
  push:
    branches:
      - main  # Change this to your branch name if needed

jobs:
  packer:
    runs-on: windows-latest
    timeout-minutes: 60

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      # - name: Set up environment variables
      #   run: |
      #     currentYear=$(date +'%Y')
      #     currentMonth=$(date +'%m')
      #     versionPrefix="$currentYear.$currentMonth"
      #     versionPatch=$((counter++))
      #     imageVersion="$versionPrefix.$versionPatch"
      #     echo "imageVersion=$imageVersion" >> $GITHUB_ENV

      - name: BuildAgentIP
        id: BuildAgentIP
        run: |
          # ipaddress=$(curl -s http://ipinfo.io/ip)
          # echo "::set-output name=address::$ipaddress"
          $ipaddress = Invoke-RestMethod -Uri "http://ipinfo.io/ip"
          Write-Output "::set-output name=address::$ipaddress"

      - name: packer build
        run: |
          # cd images/ubuntu/templates
          # packer init ./ubuntu-minimal.pkr.hcl
          # packer validate  ./ubuntu-minimal.pkr.hcl
          # packer build ./ubuntu-minimal.pkr.hcl
          cd images/windows/templates
          packer init ./windows-2019.pkr.hcl
          packer validate ./windows-2019.pkr.hcl
          packer build ./windows-2019.pkr.hcl
        env:
          # ARM_CLIENT_CERT_PATH: ${{ secrets.ARM_CLIENT_CERT_PATH }}
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          # ARM_RESOURCE_LOCATION: ${{ secrets.ARM_RESOURCE_LOCATION }}
          ARM_RESOURCE_GROUP: ${{ secrets.ARM_RESOURCE_GROUP }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
          BUILD_RESOURCE_GROUP_NAME: ${{ secrets.BUILD_RESOURCE_GROUP_NAME }}
          # TEMP_RESOURCE_GROUP_NAME: ${{ secrets.TEMP_RESOURCE_GROUP_NAME }}
          ALLOWED_INBOUND_IP_ADRESSES: ${{ steps.BuildAgentIP.outputs.address }}
          # VNET_NAME: ${{ secrets.VNET_NAME }}
          # VNET_RESOURCE_GROUP: ${{ secrets.VNET_RESOURCE_GROUP }}
          # VNET_SUBNET: ${{ secrets.VNET_SUBNET }}
